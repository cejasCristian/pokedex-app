{"version":3,"sources":["redux/constants/fetch.constants.js","redux/constants/getName.constants.js","redux/constants/getPokeData.constants.js","redux/actions/fetch.action.js","redux/actions/getName.action.js","redux/actions/getPokeData.action.js","components/searchBar/SearchBar.jsx","components/pokeCard/PokeCard.jsx","components/footer/Footer.jsx","components/pokeballAnimation/PokeballAnimation.jsx","App.jsx","redux/reducer/fetch.reducer.js","redux/reducer/getName.reducer.js","redux/reducer/getPokeData.reducer.js","redux/reducer/index.js","redux/config.js","index.jsx"],"names":["fetchConstants","SET_DATA","getNameConstants","SET_NAME","getPokeDataConstants","SET_POKEDATA","fetchActions","setData","data","type","getNameActions","setName","getPokeDataActions","setPokeData","useStyles","makeStyles","theme","root","flexGrow","title","paddingTop","inputRoot","color","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputInput","borderColor","paddingLeft","transition","transitions","create","SearchBar","classes","dispatch","useDispatch","pokemons","useSelector","state","fetch","pokemon","Container","AppBar","Toolbar","Typography","variant","className","src","alt","id","Autocomplete","options","getOptionLabel","style","onChange","event","value","renderInput","params","TextField","label","PokeCard","pokemonInfo","getPokeData","pokeData","pokeImage","upperFirst","string","charAt","toUpperCase","slice","name","Grid","container","item","xs","justify","types","weight","abilities","ability","moves","move","aspectRatio","Footer","PokeballAnimation","App","promiseInProgress","usePromiseTracker","useEffect","a","axios","result","results","map","p","trackPromise","fetchData","pokename","getName","initialState","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reduxImmutableStateInvariant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01c32b4b.chunk.js","sourcesContent":["export const fetchConstants = {\n  SET_DATA: 'SET_DATA',\n};\n\nexport default fetchConstants;\n","export const getNameConstants = {\n  SET_NAME: 'SET_NAME',\n};\n\nexport default getNameConstants;\n","export const getPokeDataConstants = {\n  SET_POKEDATA: 'SET_POKEDATA',\n};\n\nexport default getPokeDataConstants;\n","import { fetchConstants } from '../constants';\n\nconst setData = (data = []) => {\n  return { type: fetchConstants.SET_DATA, data };\n};\n\nexport const fetchActions = {\n  setData,\n};\n\nexport default fetchActions;\n","import { getNameConstants } from '../constants';\n\nconst setName = (data = '') => {\n  return { type: getNameConstants.SET_NAME, data };\n};\n\nexport const getNameActions = {\n  setName,\n};\n\nexport default getNameActions;\n","import { getPokeDataConstants } from '../constants';\n\nconst setPokeData = (data = {}) => {\n  return { type: getPokeDataConstants.SET_POKEDATA, data };\n};\n\nexport const getPokeDataActions = {\n  setPokeData,\n};\n\nexport default getPokeDataActions;\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './searchBar.css';\nimport { Container } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNameActions } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    paddingTop: 3,\n    flexGrow: 0.36,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputInput: {\n    borderColor: 'black',\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nconst SearchBar = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleChange = (event, value) => {\n    dispatch(getNameActions.setName(value));\n  };\n\n  const pokemons = useSelector((state) => state.fetch.pokemon);\n\n  return (\n    <Container>\n      {/* <div className={classes.root}> */}\n\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h6' className={classes.title}>\n            <img src='images/pokelogo.png' alt='master' id='pokelogo' />\n          </Typography>\n          {/* <div className={classes.search}> */}\n          <Autocomplete id='combo-box-demo' options={pokemons} getOptionLabel={(pokemons) => pokemons} style={{ width: 500, paddingTop: 13 }} onChange={handleChange} renderInput={(params) => <TextField {...params} label='Pokemon name...' variant='outlined' />} />\n          {/* </div> */}\n          <img src='images/pokeball.png' alt='master' id='pokeball' />\n        </Toolbar>\n      </AppBar>\n\n      {/* </div> */}\n    </Container>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport './pokeCard.css';\nimport { useSelector } from 'react-redux';\nimport { Container, Grid } from '@material-ui/core';\nimport Image from 'material-ui-image';\n\nconst PokeCard = () => {\n  const pokemonInfo = useSelector((state) => state.getPokeData.pokeData);\n\n  const pokeImage = `https://pokeres.bastionbot.org/images/pokemon/${pokemonInfo.id}.png`;\n\n  //capitalize de first letter of a word\n  const upperFirst = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <Container className='general'>\n      {!pokemonInfo.name ? (\n        <>\n          <Container className='initial-img'>\n            <Image src='images/legend.png' className='pokemonEmpty-img' alt='pokemon' aspectRatio={2.39/1} color='transparent'/>\n          </Container>\n        </>\n      ) : (\n        <>\n          <Container>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Grid container justify='center' className='grid-container'>\n                  <Grid className='grid-1'>\n                    <img src={pokeImage} alt='pokemon' id='pokemon-img' />\n                  </Grid>\n                  <Grid>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Name: {upperFirst(pokemonInfo.name)}</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>ID: {pokemonInfo.id}</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Type: {pokemonInfo.types[0].type.name}</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Weight: {pokemonInfo.weight / 10} kg</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Height: {pokemonInfo.height / 10} m</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Ability: {upperFirst(pokemonInfo.abilities[0].ability.name)}</p>\n                    </div>\n                    <div className={pokemonInfo.types[0].type.name}>\n                      <p>Move: {upperFirst(pokemonInfo.moves[0].move.name)}</p>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Container>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default PokeCard;\n","import React from 'react';\nimport './footer.css';\nimport { Container } from '@material-ui/core';\n\nconst Footer = () => {\n  return (\n    <Container className='footer'>\n      <div className='img-cont'>\n        <img src='images/bulba.svg' alt='footer' className='pokephoto1' />\n        <img src='images/charm.svg' alt='footer' className='pokephoto2' />\n        <img src='images/sq.svg' alt='footer' className='pokephoto3' />\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport './pokeball.css';\n\nconst PokeballAnimation = () => {\n  return (\n    <Container className='spinner'>\n      <img className='rotating ' src='images/pokeballFire.png' alt='master' />\n    </Container>\n  );\n};\n\nexport default PokeballAnimation;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport SearchBar from './components/searchBar/SearchBar';\nimport PokeCard from './components/pokeCard/PokeCard';\nimport Footer from './components/footer/Footer';\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker';\nimport { fetchActions, getPokeDataActions } from './redux/actions';\nimport PokeballAnimation from './components/pokeballAnimation/PokeballAnimation';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { promiseInProgress } = usePromiseTracker();\n\n  //get pokemon name list from API (only names)\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios('https://pokeapi.co/api/v2/pokemon?limit=807');\n      const data = result.data.results.map((p) => p.name);\n      dispatch(fetchActions.setData(data));\n    }\n    trackPromise(fetchData());\n  }, [dispatch]);\n\n  //set value (pokemon name) from input (search bar component)\n  const pokename = useSelector((state) => state.getName.name);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(`https://pokeapi.co/api/v2/pokemon/${pokename}`);\n\n      const data = result.data;\n      dispatch(getPokeDataActions.setPokeData(data));\n    }\n    trackPromise(fetchData());\n  }, [dispatch, pokename]);\n\n  return (\n    <>\n      <SearchBar />\n      {promiseInProgress !== true ? (\n        <>\n          {' '}\n          <PokeCard />\n        </>\n      ) : (\n        <PokeballAnimation />\n      )}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { fetchConstants } from '../constants';\n\nconst initialState = {\n  pokemon: [],\n};\n\nexport const fetch = (state = initialState, action) => {\n  switch (action.type) {\n    case fetchConstants.SET_DATA:\n      return { ...state, pokemon: action.data };\n    default:\n      return { ...state };\n  }\n};\n\nexport default fetch;\n","import { getNameConstants } from '../constants';\n\nconst initialState = {\n  name: '',\n};\n\nexport const getName = (state = initialState, action) => {\n  switch (action.type) {\n    case getNameConstants.SET_NAME:\n      return { ...state, name: action.data };\n    default:\n      return { ...state };\n  }\n};\n\nexport default getName;\n","import { getPokeDataConstants } from '../constants';\n\nconst initialState = {\n  pokeData: {},\n};\n\nexport const getPokeData = (state = initialState, action) => {\n  switch (action.type) {\n    case getPokeDataConstants.SET_POKEDATA:\n      return { ...state, pokeData: action.data };\n    default:\n      return { ...state };\n  }\n};\n\nexport default getPokeData;\n","import { combineReducers } from 'redux';\nimport { fetch } from './fetch.reducer';\nimport { getName } from './getName.reducer';\nimport { getPokeData } from './getPokeData.reducer';\n\nconst rootReducer = combineReducers({\n  fetch,\n  getName,\n  getPokeData,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunkMiddleware, reduxImmutableStateInvariant())\n  )\n);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { store } from './redux/config';\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}